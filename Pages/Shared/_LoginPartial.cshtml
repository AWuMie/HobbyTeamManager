@*@using Microsoft.AspNetCore.Identity
@using HobbyTeamManager.Areas.Identity.Data

@inject SignInManager<HobbyTeamManagerUser> SignInManager
@inject UserManager<HobbyTeamManagerUser> UserManager*@

@using HobbyTeamManager.Models
@{
    var site = Utilities.Miscellaneous.GetObjectFromSessionString<Site>(Context);
    if (site == null)
    {
        site = new Site();
    }
}

<ul class="navbar-nav">
@*@if (SignInManager.IsSignedIn(User))*@
@if (false)
{
    <li class="nav-item">
        @*<a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>*@
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" style="color:@site.FgColorHeader" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" style="color:@site.FgColorHeader" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
